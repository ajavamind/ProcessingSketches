// This file was formed by code from OpenCV processing library examples and code suggestion generated by ChapGPT
// and forum.opencv.org support

// modified by Andy Modla

import gab.opencv.*;
import org.opencv.core.Mat;
import org.opencv.videoio.VideoCapture;
import org.opencv.videoio.Videoio;

OpenCV opencv;
VideoCapture cap1;
VideoCapture cap2;
Mat frame1;
Mat frame2;
int camL = 1;
int camR = 0;
PImage left;
PImage right;

void setup() {
  size(1280, 480);
  background(128);
  opencv = new OpenCV(this, 640, 480);

  cap1 = new VideoCapture(camL, Videoio.CAP_DSHOW);
  cap2 = new VideoCapture(camR, Videoio.CAP_DSHOW);
  frame1 = new Mat();
  frame2 = new Mat();
  println("get CAP_PROP_FRAME_WIDT="+cap1.get(Videoio.CAP_PROP_FRAME_WIDTH));
  println("get CAP_PROP_FRAME_HEIGHT="+cap1.get(Videoio.CAP_PROP_FRAME_HEIGHT));
  cap1.set(Videoio.CAP_PROP_FRAME_WIDTH,640);
  cap1.set(Videoio.CAP_PROP_FRAME_HEIGHT,480);
  cap2.set(Videoio.CAP_PROP_FRAME_WIDTH,640);
  cap2.set(Videoio.CAP_PROP_FRAME_HEIGHT,480);
  println("get CAP_PROP_FOURCC="+cap1.get(Videoio.CAP_PROP_FOURCC));
  println("get CAP_PROP_FOURCC="+cap2.get(Videoio.CAP_PROP_FOURCC));

}

void draw() {
  if (cap1.read(frame1) && cap2.read(frame2)) {
    left = createImage(frame1.width(), frame1.height(), RGB);
    right = createImage(frame2.width(), frame2.height(), RGB);
    opencv.toPImage(frame1, left);
    opencv.toPImage(frame2, right);

    image(left, 0, 0, width / 2, height);
    image(right, width / 2, 0, width / 2, height);

  } else {
    fill(0);
    text("NO image", 100, 100);
  }
}

void keyPressed() {
  if (key == ' ') {
    left.save("frame1.jpg");
    right.save("frame2.jpg");
  }
}
